server.port: 8081

spring:
    application.name: temperature-monitoring
    datasource:
      username: sa
    # Define que o h2 vai ser armazenado em arquivo na pasta home do usuário (~) seguido do nome do db a ser criado (algasensors-device-management-db)
      url: jdbc:h2:file:~/algasensors-temperature-monitoring-db;CASE_INSENSITIVE_IDENTIFIERS=TRUE;AUTO_SERVER=TRUE
      driverClassName: org.h2.Driver
      password: '123'
    h2:
      console:
        enabled: 'true'
        settings.web-allow-others: 'true'
    jpa:
      database-platform: org.hibernate.dialect.H2Dialect
      hibernate:
        ddl-auto: update
      show-sql: 'false'
    rabbitmq:
      host: rabbitmq
      port: 5672
      username: ${RABBITMQ_DEFAULT_USER}
      password: ${RABBITMQ_DEFAULT_PASS}
      listener:
        simple:
          prefetch: 4 # define quantas mensagens cada instância desse consumer pode processar por vez
          retry:
          # a cada <initial-interval> segundos tenta reprocessar a mensagem por
          # no máximo <max-interval> segundos, a cada nova tentativa o tempo de
          # espera é multiplicado por <multiplier>, até o máximo de <max-attempts>
          #  tentativas
            enabled: true
            initial-interval: 10s # intervalo de tempo entre tentativas de reprocessamento
            max-interval: 20s
            max-attempts: 3
            multiplier: 2